const n=JSON.parse('{"key":"v-6c994250","path":"/posts/%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/1.html","title":"无法置空的引用","lang":"zh-CN","frontmatter":{"title":"无法置空的引用","icon":"pen-to-square","date":"2023-06-20T00:00:00.000Z","category":["学习小记"],"tag":["TypeScript"],"contributors":false,"editLink":false,"comment":false,"description":"在 Typescript 中 在学习算法时, 发现了一个困惑，经过尝试发现， 自己竟然理解错了这一概念很长时间 function modify(arr: number[]) { arr[0] = 99; } function solution(arr: number[]) { arr = []; console.log(arr); // [] console.log(arr === array); // false } let array = [1, 2, 3, 4]; console.log(array); // [ 1, 2, 3, 4 ] modify(array); console.log(array); // [ 99, 2, 3, 4 ] solution(array); console.log(array); // [ 1, 2, 3, 4 ]","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/1.html"}],["meta",{"property":"og:site_name","content":"Lee"}],["meta",{"property":"og:title","content":"无法置空的引用"}],["meta",{"property":"og:description","content":"在 Typescript 中 在学习算法时, 发现了一个困惑，经过尝试发现， 自己竟然理解错了这一概念很长时间 function modify(arr: number[]) { arr[0] = 99; } function solution(arr: number[]) { arr = []; console.log(arr); // [] console.log(arr === array); // false } let array = [1, 2, 3, 4]; console.log(array); // [ 1, 2, 3, 4 ] modify(array); console.log(array); // [ 99, 2, 3, 4 ] solution(array); console.log(array); // [ 1, 2, 3, 4 ]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T23:48:00.000Z"}],["meta",{"property":"article:author","content":"Lee"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:published_time","content":"2023-06-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T23:48:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"无法置空的引用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-30T23:48:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lee\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"在 Typescript 中","slug":"在-typescript-中","link":"#在-typescript-中","children":[]},{"level":3,"title":"在 C 语言中","slug":"在-c-语言中","link":"#在-c-语言中","children":[]}],"git":{"createdTime":1696117680000,"updatedTime":1696117680000,"contributors":[{"name":"righthan","email":"2753875841@qq.com","commits":1}]},"readingTime":{"minutes":2.1,"words":631},"filePathRelative":"posts/学习小记/1.md","localizedDate":"2023年6月20日","excerpt":"<h3> 在 Typescript 中</h3>\\n<p>在学习算法时, 发现了一个困惑，经过尝试发现， 自己竟然理解错了这一概念很长时间</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">modify</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  arr<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">99</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">solution</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  arr <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// []</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>arr <span class=\\"token operator\\">===</span> array<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// false</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">let</span> array <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// [ 1, 2, 3, 4 ]</span>\\n\\n<span class=\\"token function\\">modify</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// [ 99, 2, 3, 4 ]</span>\\n\\n<span class=\\"token function\\">solution</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// [ 1, 2, 3, 4 ]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
